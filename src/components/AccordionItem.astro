---
type Props = {
  idx: number;
  title: string;
  description: string;
  color?: string;
};

const { idx, title, description, color } = Astro.props;
const buttonClasses = color
  ? `accordion-button text-left font-semibold text-${color}-700`
  : 'accordion-button text-left font-semibold';
const contentClasses = color ? `text-${color}-800` : '';
---

<div
  x-data={idx === 0
    ? '{ activeAccordion: true }'
    : '{ activeAccordion: false }'}
  class="box flex flex-col text-left flow prose max-w-4xl mx-auto bg-transparent border-solid border border-b-gray-600 border-t-0 border-l-0 border-r-0"
>
  <button
    @click="activeAccordion = !activeAccordion"
    :aria-expanded="activeAccordion"
    aria-controls={`accordion-panel-${idx}`}
    id={`accordion-header-${idx}`}
    class={buttonClasses}
  >
    {title}
    <svg
      x-show="!activeAccordion"
      focusable="false"
      aria-hidden="true"
      viewBox="0 0 24 24"
      ><path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" fill="currentColor"
      ></path><path d="M0 0h24v24H0z" fill="none"></path></svg
    ><svg
      x-show="activeAccordion"
      focusable="false"
      aria-hidden="true"
      viewBox="0 0 24 24"
      ><path d="M19 13H5v-2h14v2z" fill="currentColor"></path><path
        d="M0 0h24v24H0z"
        fill="none"></path></svg
    >
  </button>
  <section
    :hidden="!activeAccordion"
    id={`accordion-panel-${idx}`}
    aria-labelledby={`accordion-header-${idx}`}
    class={contentClasses}
  >
    <p class="accordion-body">
      {description}
    </p>
  </section>
</div>

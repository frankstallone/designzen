/* 
  Global styles 

  Low-specificity, global styles that apply to the whole 
  project: https://cube.fyi/css.html
*/

html {
  scroll-behavior: smooth;
}

body {
  color: var(--color-dark);
  background: var(--gray100);
  font-size: var(--step-0);
  font-family: var(--font-base);
  font-weight: var(--font-base-weight);
  line-height: var(--line-height);
  letter-spacing: var(--tracking);
  position: relative;
}

/* Base typesetting */
h1,
h2,
h3 {
  font-family: var(--font-display);
  line-height: var(--line-height-small);
  letter-spacing: var(--tracking-s);
  font-weight: 500;
}

h1 {
  font-size: var(--step-6);
  font-weight: 900;
  text-transform: uppercase;
}

h2 {
  font-size: var(--step-4);
}

h3 {
  font-size: var(--step-2);
}

/* Set line lengths */
p,
li,
blockquote:not([class]) {
  max-inline-size: 50ch;
}

h1,
h2,
h3,
blockquote {
  max-inline-size: 30ch;
  text-wrap: balance;
}

/* More generic elements */
blockquote:not([class]) {
  font-family: var(--font-display);
  font-size: var(--step-2);
}

/* Markdown blockquuote:not([class])s aren't ideal, so we're presuming the person quoted is the last p */
blockquote:not([class]) p:last-of-type {
  font-family: var(--font-base);
  font-size: var(--step-1);
  font-weight: normal;
}

svg {
  height: 2ex;
  width: auto;
  flex: none;
}

[role='list'] {
  padding: 0;
}

/* Base interactive elements */

a {
  color: currentcolor;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

:focus {
  outline: 2px solid;
  outline-offset: 0.3ch;
}

:target {
  scroll-margin-top: 2ex;
}

main:focus {
  outline: none;
}

/* Base selection styles that invert whatever colours are rendered */
::selection {
  background: var(--color-dark);
  color: var(--color-light);
}

form > p {
  display: flex;
  flex-flow: column nowrap;
}

form > p label {
  margin-block-end: 0.5rem;
  margin-inline-end: 0.5rem;
}

input,
textarea {
  border-radius: 4px;
  border: 1px solid var(--gray700);
  padding-block: var(--space-2xs);
  padding-inline: var(--space-xs);
}

input:focus,
textarea:focus {
  outline: 2px solid var(--warmbreeze400);
}

.button {
  display: block;
  max-width: fit-content;
  --tracking: 0;
  letter-spacing: var(--tracking);
  font-size: var(--step--3);
  font-weight: 600;
  background: var(--yellow500);
  color: var(--yellow1000);
  border: none;
  padding: var(--space-xs) var(--space-xl);
  text-decoration: none;
}

.button:hover,
.button:active,
.button:focus {
  background: var(--yellow600);
  color: var(--yellow1200);
}

.button.disabled {
  background: var(--gray200);
  color: var(--gray700);
}

#zen {
  width: 245dvw;
  height: 245dvh;
  top: 88%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#how-01::after,
#how-02::after,
#how-03::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  background-repeat: no-repeat;
  background-position-x: center;
  background-position-y: center;
}
#how-01::after {
  background-image: url(/images/circle-lines-01.svg);
}

#how-02::after {
  background-image: url(/images/circle-lines-02.svg);
}

#how-03::after {
  background-image: url(/images/circle-lines-03.svg);
}

#circle-01 {
  color: red;
}

@media (max-width: 700px) {
  #zen {
    width: 250dvw;
    height: 250dvh;
    top: 105%;
  }
}

@media (max-width: 400px) {
  #zen {
    width: 300dvw;
    height: 300dvh;
    top: 78%;
  }
}
